{
	"id": "5fd69f1a821bc3dde3c08b35e1e79a82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Richest.sol": {
				"content": "pragma solidity >=0.4.22 <=0.8.17;\n\ncontract Richest {\n    address richest;\n    uint256 mostSent;\n    mapping (address => uint256) pendingWithdrawals;\n\n    function becomeRichest() external payable returns (bool) {\n        if (msg.value <= mostSent) {\n            return false;\n        }\n\n        pendingWithdrawals[richest] += mostSent;\n        richest = msg.sender;\n        mostSent = msg.value;\n        return true;\n    }\n\n    function withdraw() external {\n        uint256 amount = pendingWithdrawals[msg.sender];\n        // important to do this before transferring the funds to avoid reentrance\n        pendingWithdrawals[msg.sender] = 0;\n        (bool sent,) = payable(msg.sender).call{value: amount}(\"\");\n        require(sent);\n    }\n\n    function getRichest() public view returns (address) {\n        return (richest);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Richest.sol": {
				"Richest": {
					"abi": [
						{
							"inputs": [],
							"name": "becomeRichest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRichest",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Richest.sol\":36:833  contract Richest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Richest.sol\":36:833  contract Richest {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x69934ee7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9a5dd735\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Richest.sol\":430:740  function withdraw() external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Richest.sol\":156:424  function becomeRichest() external payable returns (bool) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Richest.sol\":746:831  function getRichest() public view returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Richest.sol\":430:740  function withdraw() external {... */\n    tag_7:\n        /* \"contracts/Richest.sol\":469:483  uint256 amount */\n      0x00\n        /* \"contracts/Richest.sol\":486:504  pendingWithdrawals */\n      0x02\n        /* \"contracts/Richest.sol\":486:516  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"contracts/Richest.sol\":505:515  msg.sender */\n      caller\n        /* \"contracts/Richest.sol\":486:516  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Richest.sol\":469:516  uint256 amount = pendingWithdrawals[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Richest.sol\":641:642  0 */\n      0x00\n        /* \"contracts/Richest.sol\":608:626  pendingWithdrawals */\n      0x02\n        /* \"contracts/Richest.sol\":608:638  pendingWithdrawals[msg.sender] */\n      0x00\n        /* \"contracts/Richest.sol\":627:637  msg.sender */\n      caller\n        /* \"contracts/Richest.sol\":608:638  pendingWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Richest.sol\":608:642  pendingWithdrawals[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Richest.sol\":653:662  bool sent */\n      0x00\n        /* \"contracts/Richest.sol\":675:685  msg.sender */\n      caller\n        /* \"contracts/Richest.sol\":667:691  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Richest.sol\":699:705  amount */\n      dup3\n        /* \"contracts/Richest.sol\":667:710  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_22\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_21)\n    tag_22:\n      0x60\n      swap2\n      pop\n    tag_21:\n      pop\n        /* \"contracts/Richest.sol\":652:710  (bool sent,) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Richest.sol\":728:732  sent */\n      dup1\n        /* \"contracts/Richest.sol\":720:733  require(sent) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Richest.sol\":459:740  {... */\n      pop\n      pop\n        /* \"contracts/Richest.sol\":430:740  function withdraw() external {... */\n      jump\t// out\n        /* \"contracts/Richest.sol\":156:424  function becomeRichest() external payable returns (bool) {... */\n    tag_9:\n        /* \"contracts/Richest.sol\":207:211  bool */\n      0x00\n        /* \"contracts/Richest.sol\":240:248  mostSent */\n      sload(0x01)\n        /* \"contracts/Richest.sol\":227:236  msg.value */\n      callvalue\n        /* \"contracts/Richest.sol\":227:248  msg.value <= mostSent */\n      gt\n        /* \"contracts/Richest.sol\":223:287  if (msg.value <= mostSent) {... */\n      tag_25\n      jumpi\n        /* \"contracts/Richest.sol\":271:276  false */\n      0x00\n        /* \"contracts/Richest.sol\":264:276  return false */\n      swap1\n      pop\n      jump(tag_24)\n        /* \"contracts/Richest.sol\":223:287  if (msg.value <= mostSent) {... */\n    tag_25:\n        /* \"contracts/Richest.sol\":328:336  mostSent */\n      sload(0x01)\n        /* \"contracts/Richest.sol\":297:315  pendingWithdrawals */\n      0x02\n        /* \"contracts/Richest.sol\":297:324  pendingWithdrawals[richest] */\n      0x00\n        /* \"contracts/Richest.sol\":316:323  richest */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Richest.sol\":297:324  pendingWithdrawals[richest] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Richest.sol\":297:336  pendingWithdrawals[richest] += mostSent */\n      dup3\n      dup3\n      sload\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Richest.sol\":356:366  msg.sender */\n      caller\n        /* \"contracts/Richest.sol\":346:353  richest */\n      0x00\n      dup1\n        /* \"contracts/Richest.sol\":346:366  richest = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Richest.sol\":387:396  msg.value */\n      callvalue\n        /* \"contracts/Richest.sol\":376:384  mostSent */\n      0x01\n        /* \"contracts/Richest.sol\":376:396  mostSent = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Richest.sol\":413:417  true */\n      0x01\n        /* \"contracts/Richest.sol\":406:417  return true */\n      swap1\n      pop\n        /* \"contracts/Richest.sol\":156:424  function becomeRichest() external payable returns (bool) {... */\n    tag_24:\n      swap1\n      jump\t// out\n        /* \"contracts/Richest.sol\":746:831  function getRichest() public view returns (address) {... */\n    tag_14:\n        /* \"contracts/Richest.sol\":789:796  address */\n      0x00\n        /* \"contracts/Richest.sol\":816:823  richest */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Richest.sol\":808:824  return (richest) */\n      swap1\n      pop\n        /* \"contracts/Richest.sol\":746:831  function getRichest() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_29:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_30:\n        /* \"#utility.yul\":184:205   */\n      tag_42\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_29\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_11:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_44\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_31:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:662   */\n    tag_32:\n        /* \"#utility.yul\":603:610   */\n      0x00\n        /* \"#utility.yul\":632:656   */\n      tag_47\n        /* \"#utility.yul\":650:655   */\n      dup3\n        /* \"#utility.yul\":632:656   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":621:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:786   */\n    tag_33:\n        /* \"#utility.yul\":755:779   */\n      tag_49\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":755:779   */\n      tag_32\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":750:753   */\n      dup3\n        /* \"#utility.yul\":743:780   */\n      mstore\n        /* \"#utility.yul\":668:786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:1014   */\n    tag_16:\n        /* \"#utility.yul\":885:889   */\n      0x00\n        /* \"#utility.yul\":923:925   */\n      0x20\n        /* \"#utility.yul\":912:921   */\n      dup3\n        /* \"#utility.yul\":908:926   */\n      add\n        /* \"#utility.yul\":900:926   */\n      swap1\n      pop\n        /* \"#utility.yul\":936:1007   */\n      tag_51\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":936:1007   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":792:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1167   */\n    tag_34:\n        /* \"#utility.yul\":1121:1132   */\n      0x00\n        /* \"#utility.yul\":1158:1161   */\n      dup2\n        /* \"#utility.yul\":1143:1161   */\n      swap1\n      pop\n        /* \"#utility.yul\":1020:1167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1287   */\n    tag_35:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1293:1691   */\n    tag_36:\n        /* \"#utility.yul\":1452:1455   */\n      0x00\n        /* \"#utility.yul\":1473:1556   */\n      tag_55\n        /* \"#utility.yul\":1554:1555   */\n      0x00\n        /* \"#utility.yul\":1549:1552   */\n      dup4\n        /* \"#utility.yul\":1473:1556   */\n      tag_34\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1466:1556   */\n      swap2\n      pop\n        /* \"#utility.yul\":1565:1658   */\n      tag_56\n        /* \"#utility.yul\":1654:1657   */\n      dup3\n        /* \"#utility.yul\":1565:1658   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1683:1684   */\n      0x00\n        /* \"#utility.yul\":1678:1681   */\n      dup3\n        /* \"#utility.yul\":1674:1685   */\n      add\n        /* \"#utility.yul\":1667:1685   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1697:2076   */\n    tag_19:\n        /* \"#utility.yul\":1881:1884   */\n      0x00\n        /* \"#utility.yul\":1903:2050   */\n      tag_58\n        /* \"#utility.yul\":2046:2049   */\n      dup3\n        /* \"#utility.yul\":1903:2050   */\n      tag_36\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1896:2050   */\n      swap2\n      pop\n        /* \"#utility.yul\":2067:2070   */\n      dup2\n        /* \"#utility.yul\":2060:2070   */\n      swap1\n      pop\n        /* \"#utility.yul\":1697:2076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2082:2159   */\n    tag_37:\n        /* \"#utility.yul\":2119:2126   */\n      0x00\n        /* \"#utility.yul\":2148:2153   */\n      dup2\n        /* \"#utility.yul\":2137:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2082:2159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2165:2345   */\n    tag_38:\n        /* \"#utility.yul\":2213:2290   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2203:2291   */\n      mstore\n        /* \"#utility.yul\":2310:2314   */\n      0x11\n        /* \"#utility.yul\":2307:2308   */\n      0x04\n        /* \"#utility.yul\":2300:2315   */\n      mstore\n        /* \"#utility.yul\":2334:2338   */\n      0x24\n        /* \"#utility.yul\":2331:2332   */\n      0x00\n        /* \"#utility.yul\":2324:2339   */\n      revert\n        /* \"#utility.yul\":2351:2542   */\n    tag_27:\n        /* \"#utility.yul\":2391:2394   */\n      0x00\n        /* \"#utility.yul\":2410:2430   */\n      tag_62\n        /* \"#utility.yul\":2428:2429   */\n      dup3\n        /* \"#utility.yul\":2410:2430   */\n      tag_37\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2405:2430   */\n      swap2\n      pop\n        /* \"#utility.yul\":2444:2464   */\n      tag_63\n        /* \"#utility.yul\":2462:2463   */\n      dup4\n        /* \"#utility.yul\":2444:2464   */\n      tag_37\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2439:2464   */\n      swap3\n      pop\n        /* \"#utility.yul\":2487:2488   */\n      dup3\n        /* \"#utility.yul\":2484:2485   */\n      dup3\n        /* \"#utility.yul\":2480:2489   */\n      add\n        /* \"#utility.yul\":2473:2489   */\n      swap1\n      pop\n        /* \"#utility.yul\":2508:2511   */\n      dup1\n        /* \"#utility.yul\":2505:2506   */\n      dup3\n        /* \"#utility.yul\":2502:2512   */\n      gt\n        /* \"#utility.yul\":2499:2535   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2515:2533   */\n      tag_65\n      tag_38\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2499:2535   */\n    tag_64:\n        /* \"#utility.yul\":2351:2542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f4f91b728bb3567f92dc50718d1e666e6ba68c04219477268419fe657be2977064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061041c806100206000396000f3fe6080604052600436106100345760003560e01c80633ccfd60b1461003957806369934ee7146100505780639a5dd7351461006e575b600080fd5b34801561004557600080fd5b5061004e610099565b005b61005861019c565b60405161006591906102bc565b60405180910390f35b34801561007a57600080fd5b50610083610278565b6040516100909190610318565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161014890610364565b60006040518083038185875af1925050503d8060008114610185576040519150601f19603f3d011682016040523d82523d6000602084013e61018a565b606091505b505090508061019857600080fd5b5050565b600060015434116101b05760009050610275565b600154600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461022291906103b2565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008115159050919050565b6102b6816102a1565b82525050565b60006020820190506102d160008301846102ad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610302826102d7565b9050919050565b610312816102f7565b82525050565b600060208201905061032d6000830184610309565b92915050565b600081905092915050565b50565b600061034e600083610333565b91506103598261033e565b600082019050919050565b600061036f82610341565b9150819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103bd82610379565b91506103c883610379565b92508282019050808211156103e0576103df610383565b5b9291505056fea2646970667358221220f4f91b728bb3567f92dc50718d1e666e6ba68c04219477268419fe657be2977064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x9A5DD735 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x148 SWAP1 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0x1B0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x3B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302 DUP3 PUSH2 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312 DUP2 PUSH2 0x2F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E PUSH1 0x0 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x359 DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP3 PUSH2 0x341 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BD DUP3 PUSH2 0x379 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C8 DUP4 PUSH2 0x379 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x383 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xF9 SHL PUSH19 0x8BB3567F92DC50718D1E666E6BA68C04219477 0x26 DUP5 NOT INVALID PUSH6 0x7BE297706473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "36:797:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@becomeRichest_41": {
									"entryPoint": 412,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRichest_85": {
									"entryPoint": 632,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_76": {
									"entryPoint": 153,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2545:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "621:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "632:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "621:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "593:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "603:7:1",
														"type": ""
													}
												],
												"src": "566:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "733:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "750:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "755:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "755:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "728:3:1",
														"type": ""
													}
												],
												"src": "668:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "912:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "900:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "936:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "936:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "862:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "874:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "885:4:1",
														"type": ""
													}
												],
												"src": "792:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1158:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1143:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1105:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1110:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1121:11:1",
														"type": ""
													}
												],
												"src": "1020:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1279:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1271:6:1",
														"type": ""
													}
												],
												"src": "1173:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1473:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1466:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1654:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1565:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1565:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1678:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1667:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1444:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1452:3:1",
														"type": ""
													}
												],
												"src": "1293:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1896:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2046:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1903:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2060:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2067:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2060:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1872:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1881:3:1",
														"type": ""
													}
												],
												"src": "1697:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2127:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2137:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2148:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2137:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2109:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2119:7:1",
														"type": ""
													}
												],
												"src": "2082:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2193:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2300:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2405:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2428:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2410:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2405:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2439:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2462:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2444:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2439:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2473:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2484:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2487:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2513:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2515:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2515:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2515:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2505:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2508:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2502:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:10:1"
															},
															"nodeType": "YulIf",
															"src": "2499:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2382:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2385:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2391:3:1",
														"type": ""
													}
												],
												"src": "2351:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80633ccfd60b1461003957806369934ee7146100505780639a5dd7351461006e575b600080fd5b34801561004557600080fd5b5061004e610099565b005b61005861019c565b60405161006591906102bc565b60405180910390f35b34801561007a57600080fd5b50610083610278565b6040516100909190610318565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161014890610364565b60006040518083038185875af1925050503d8060008114610185576040519150601f19603f3d011682016040523d82523d6000602084013e61018a565b606091505b505090508061019857600080fd5b5050565b600060015434116101b05760009050610275565b600154600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461022291906103b2565b92505081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550600190505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008115159050919050565b6102b6816102a1565b82525050565b60006020820190506102d160008301846102ad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610302826102d7565b9050919050565b610312816102f7565b82525050565b600060208201905061032d6000830184610309565b92915050565b600081905092915050565b50565b600061034e600083610333565b91506103598261033e565b600082019050919050565b600061036f82610341565b9150819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103bd82610379565b91506103c883610379565b92508282019050808211156103e0576103df610383565b5b9291505056fea2646970667358221220f4f91b728bb3567f92dc50718d1e666e6ba68c04219477268419fe657be2977064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x69934EE7 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x9A5DD735 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x148 SWAP1 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0x1B0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x3B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x2A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302 DUP3 PUSH2 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312 DUP2 PUSH2 0x2F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E PUSH1 0x0 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x359 DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP3 PUSH2 0x341 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BD DUP3 PUSH2 0x379 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C8 DUP4 PUSH2 0x379 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x383 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xF9 SHL PUSH19 0x8BB3567F92DC50718D1E666E6BA68C04219477 0x26 DUP5 NOT INVALID PUSH6 0x7BE297706473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "36:797:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:310;;;;;;;;;;;;;:::i;:::-;;156:268;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;746:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:310;469:14;486:18;:30;505:10;486:30;;;;;;;;;;;;;;;;469:47;;641:1;608:18;:30;627:10;608:30;;;;;;;;;;;;;;;:34;;;;653:9;675:10;667:24;;699:6;667:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:58;;;728:4;720:13;;;;;;459:281;;430:310::o;156:268::-;207:4;240:8;;227:9;:21;223:64;;271:5;264:12;;;;223:64;328:8;;297:18;:27;316:7;;;;;;;;;;;297:27;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;356:10;346:7;;:20;;;;;;;;;;;;;;;;;;387:9;376:8;:20;;;;413:4;406:11;;156:268;;:::o;746:85::-;789:7;816;;;;;;;;;;;808:16;;746:85;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1020:147::-;1121:11;1158:3;1143:18;;1020:147;;;;:::o;1173:114::-;;:::o;1293:398::-;1452:3;1473:83;1554:1;1549:3;1473:83;:::i;:::-;1466:90;;1565:93;1654:3;1565:93;:::i;:::-;1683:1;1678:3;1674:11;1667:18;;1293:398;;;:::o;1697:379::-;1881:3;1903:147;2046:3;1903:147;:::i;:::-;1896:154;;2067:3;2060:10;;1697:379;;;:::o;2082:77::-;2119:7;2148:5;2137:16;;2082:77;;;:::o;2165:180::-;2213:77;2210:1;2203:88;2310:4;2307:1;2300:15;2334:4;2331:1;2324:15;2351:191;2391:3;2410:20;2428:1;2410:20;:::i;:::-;2405:25;;2444:20;2462:1;2444:20;:::i;:::-;2439:25;;2487:1;2484;2480:9;2473:16;;2508:3;2505:1;2502:10;2499:36;;;2515:18;;:::i;:::-;2499:36;2351:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "210400",
								"executionCost": "251",
								"totalCost": "210651"
							},
							"external": {
								"becomeRichest()": "infinite",
								"getRichest()": "2544",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 833,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4f91b728bb3567f92dc50718d1e666e6ba68c04219477268419fe657be2977064736f6c63430008110033",
									".code": [
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "69934EE7"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "9A5DD735"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 156,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 746,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 746,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 515,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 608,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 642,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 667,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 667,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 667,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 720,
											"end": 733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 720,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 720,
											"end": 733,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 720,
											"end": 733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 227,
											"end": 248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 223,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 271,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 264,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 264,
											"end": 276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 223,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 316,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 297,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 366,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 346,
											"end": 366,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 396,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 156,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 746,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 789,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 816,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 808,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 746,
											"end": 831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 566,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 632,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 668,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 900,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 900,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 936,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1173,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1293,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1473,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1556,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1473,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1654,
											"end": 1657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1565,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1565,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1697,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2046,
											"end": 2049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1903,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2050,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1903,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 2050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 2050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 2076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2082,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2165,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2410,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2410,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2444,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2444,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2512,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2499,
											"end": 2535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2515,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2499,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Richest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"becomeRichest()": "69934ee7",
							"getRichest()": "9a5dd735",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"becomeRichest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRichest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Richest.sol\":\"Richest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Richest.sol\":{\"keccak256\":\"0x0abfd3636b2b04d96e780077001aded5cf508d81ecce5b9c60686299fc9f41fa\",\"urls\":[\"bzz-raw://c67ed2d9ad712b6b773320ae1efd2e5d5050192eb6b35648c19f960b57345f56\",\"dweb:/ipfs/QmTfpMYfaEFTgFBmAQCqC6EeYYi5L8b5oaC3iQRGm8nkhm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Richest.sol:Richest",
								"label": "richest",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Richest.sol:Richest",
								"label": "mostSent",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/Richest.sol:Richest",
								"label": "pendingWithdrawals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Richest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Richest.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Richest.sol": {
				"ast": {
					"absolutePath": "contracts/Richest.sol",
					"exportedSymbols": {
						"Richest": [
							86
						]
					},
					"id": 87,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:34:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Richest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "Richest",
							"nameLocation": "45:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "richest",
									"nameLocation": "67:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "59:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "59:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "mostSent",
									"nameLocation": "88:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "80:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "pendingWithdrawals",
									"nameLocation": "131:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "102:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "102:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "213:211:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 14,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "227:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "231:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "227:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 16,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "240:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "227:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "IfStatement",
												"src": "223:64:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "250:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "271:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 13,
															"id": 19,
															"nodeType": "Return",
															"src": "264:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 22,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "297:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 24,
														"indexExpression": {
															"id": 23,
															"name": "richest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "297:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 25,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "328:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "297:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "297:39:0"
											},
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "richest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "356:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "360:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "356:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "346:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "346:20:0"
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "mostSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "376:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "387:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "391:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "387:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "376:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "376:20:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 13,
												"id": 39,
												"nodeType": "Return",
												"src": "406:11:0"
											}
										]
									},
									"functionSelector": "69934ee7",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "becomeRichest",
									"nameLocation": "165:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "207:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:6:0"
									},
									"scope": 86,
									"src": "156:268:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "459:281:0",
										"statements": [
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "477:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "469:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 44,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"baseExpression": {
														"id": 46,
														"name": "pendingWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "486:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 49,
													"indexExpression": {
														"expression": {
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "505:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "509:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "486:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "469:47:0"
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 51,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "608:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"expression": {
																"id": 52,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "627:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "631:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "608:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "608:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "608:34:0"
											},
											{
												"assignments": [
													59,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "658:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "653:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 58,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "653:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 70,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "707:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 62,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "675:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "679:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "675:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "667:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 60,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "667:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "667:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "687:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "667:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 66,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "699:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "667:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "652:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "720:13:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "439:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:0:0"
									},
									"scope": 86,
									"src": "430:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "798:33:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 81,
															"name": "richest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 82,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "815:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 83,
												"nodeType": "Return",
												"src": "808:16:0"
											}
										]
									},
									"functionSelector": "9a5dd735",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRichest",
									"nameLocation": "755:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:9:0"
									},
									"scope": 86,
									"src": "746:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "36:797:0",
							"usedErrors": []
						}
					],
					"src": "0:833:0"
				},
				"id": 0
			}
		}
	}
}